<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Concerns\HasUlids;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Str;
use Laravel\Cashier\Billable;

use function Illuminate\Events\queueable;

class Team extends Model
{
    use Billable, HasFactory, HasUlids, SoftDeletes;
    protected $fillable = [
        'name',
        'logo_url',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function ($team) {
            $team->slug = Str::slug($team->name);
        });

        static::updated(queueable(function (Team $customer) {
            if ($customer->hasStripeId()) {
                $customer->syncStripeCustomerDetails();
            }
        }));
    }

    public function stripeName(): string|null
    {
        return $this->company_name;
    }

    public function stripeAddress()
    {

    }

    public function roles(): hasMany
    {
        $this->hasMany(Role::class);
    }

    public function users(): BelongsToMany
    {
        return $this->belongsToMany(User::class);
    }

    public function memberships(): BelongsToMany
    {
        return $this->belongsToMany(Membership::class, 'membership_team');
    }

    public function rooms(): HasMany
    {
        return $this->hasMany(Room::class, 'team_id');
    }
}
